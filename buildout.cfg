[buildout]
index = https://packages.lizard.net
extends =
    https://packages.lizard.net/kgs/3.1.22/versions.cfg
find-links =
unzip = true
prefer-final = true
show-picked-versions = true
extensions =
    mr.developer
parts =
    sysegg
    mkdir
    django
    omelette
    pyflakes
    sphinx
    pylint
    console_scripts
develop = .
eggs =
    lizard-progress


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
lizard-progress =
metfilelib = 0.16
ribxlib = 0.4

# Reported by buildout-versions
pandas = 0.10.1
pyproj = 1.9.4
zc.buildout =
pytz = 2014.10
Django = 1.6.5
django-nose = 1.4
djangorecipe = 1.10
django-extensions = 1.3.8
django-compressor = 1.4
gunicorn = 19.0.0
lizard-map = 4.50
lizard-ui = 4.40
factory_boy = 2.4.1
factory-boy = 2.4.1
Pillow = 2.8.1
lxml =

[sources]
metfilelib = git git@github.com:nens/metfilelib
ribxlib = git git@github.com:nens/ribxlib.git

[sysegg]
recipe = syseggrecipe
force-sysegg = true
eggs =
    psycopg2
    matplotlib

[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = lizard_progress
projectegg = lizard_progress
settings = testsettings
test = lizard_progress
eggs = lizard-progress


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    eazysvn
    createcoverage
    pep8
    pylint
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'

[pylint]
recipe = zc.recipe.egg
eggs =
    pylint
    ${buildout:eggs}
scripts = pylint
entry-points = pylint=pylint.lint:Run
arguments = ['--output-format=parseable', '--reports=n']+sys.argv[1:]

[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}
